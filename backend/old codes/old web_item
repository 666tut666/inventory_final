@router.post("/create-an-item")
async def create_an_item(request: Request, db: Session = Depends(get_db)):
    form = await request.form()
    title = form.get("title")
    description = form.get("description")
    errors = []
    if not title or len(title) < 4:
        errors.append("Title should be > 4 chars")
    if not description or len(description) < 10:
        errors.append("Description should be > 10 chars")
    if len(errors) > 0:
        return templates.TemplateResponse(
            "create_item.html", {"request": request, "errors": errors}
        )
    try:
        token = request.cookies.get("access_token")
        if not token:
            errors.append("Kindly Authenticate first by login")
            return templates.TemplateResponse(
                "create_item.html", {"request": request, "errors": errors}
            )
        scheme, _, param = token.partition(" ")
        payload = jwt.decode(param, settings.SECRET_KEY, algorithms=settings.ALGORITHM)
        email = payload.get("sub")
        if email is None:
            errors.append("Kindly login first, you are not authenticated")
            return templates.TemplateResponse(
                "create_item.html", {"request": request, "errors": errors}
            )
        else:
            user = db.query(User).filter(User.email == email).first()
            if user is None:
                errors.append("You are not authenticated, Kindly Login")
                return templates.TemplateResponse(
                    "create_item.html", {"request": request, "errors": errros}
                )
            else:
                item = Items(
                    title=title,
                    description=description,
                    date_posted=datetime.now().date(),
                    owner_id=user.id,
                )
                db.add(item)
                db.commit()
                db.refresh(item)
                print(item.id)
                return responses.RedirectResponse(
                    f"/detail/{item.id}", status_code=status.HTTP_302_FOUND
                )